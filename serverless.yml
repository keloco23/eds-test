service: eds-test

provider:
  name: aws
  runtime: python3.9
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "s3:ListBucket"
            - "s3:GetObject"
            - "s3:PutObject"
            - "s3:CreateBucket"
          Resource: "*"
  region: us-east-1 
  environment:
    USD_TABLE: usdTable
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "dynamodb:DescribeTable"
        - "dynamodb:Query"
        - "dynamodb:Scan"
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.USD_TABLE}"

functions:
  getUf:
    handler: functions/uf.get_uf
    timeout: 120
    events:
      - http:
          path: get-uf
          method: post
  getUSD:
    handler: functions/usd.get_usd
    timeout: 120
    events:
      - http:
          path: get-usd
          method: get       

plugins:
  - serverless-offline
  - serverless-s3-local
  #- serverless-dynamodb

custom:
  s3:
    host: localhost
    port: 8001
    directory: D:/prueba/eds-test/s3-storage
    accessKeyId: S3RVER
    secretAccessKey: S3RVER
         
  serverless-offline:
    httpPort: 3000
    lambdaPort: 3002
    noPrependStageInUrl: true

resources:
  Resources:
    LocalS3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: local-bucket
